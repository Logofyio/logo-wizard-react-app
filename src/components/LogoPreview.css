/* src/components/LogoPreview.css */

.logo-preview-container {
    width: 100%;
    max-width: 300px;
    margin: 20px auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.logo-display-area {
    width: 250px; /* Fixed size for the preview area */
    height: 250px; /* Ensure it's square for circle/square shapes */
    border: 2px dashed #888;
    display: flex;
    flex-direction: column; /* Stack icon and text vertically */
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Hide anything outside the bounds */
    transition: all 0.3s ease; /* Smooth transitions for changes */
}

.placeholder-text {
    font-size: 1.5em; /* Default font size */
    margin: 0;
    padding: 10px;
    text-align: center;
    word-break: break-word; /* Prevents long words from overflowing */
}

/* Styles for Lucide SVG icons */
.logo-icon {
    width: 50px; /* Adjust size as needed for your icons */
    height: 50px;
    margin-bottom: 10px; /* Space between icon and text */
    /* You can add color via 'stroke' or 'fill' if you want to override Lucide's default */
    stroke: currentColor; /* Inherit color from parent text, or set a specific color */
    fill: currentColor; /* For filled icons, inherit color or set specific */
}

/* Basic shape examples */
.shape-circle {
    border-radius: 50%;
}

.shape-square {
    border-radius: 0; /* Default, but explicit for clarity */
}

.shape-rounded-square {
    border-radius: 15px; /* Example: adjust for desired roundness */
}

/* Basic Triangle (requires careful positioning and background handling) */
.shape-triangle {
    width: 0;
    height: 0;
    border-left: 125px solid transparent; /* Half of width */
    border-right: 125px solid transparent; /* Half of width */
    border-bottom: 250px solid var(--background-color, #f0f0f0); /* Uses the background color of the shape */
    /* To make the triangle background match the selected background color,
       you'll need to pass the background color into the CSS variable
       or adjust the border-bottom color dynamically.
       For html2canvas to capture it correctly, it often needs to be a solid shape.
       Complex shapes might be better achieved with SVG background or a library.
    */
    display: block; /* Ensure it behaves as a block */
    position: relative; /* For positioning icon/text inside */
    transform: translateY(25%); /* Adjust to center content visually */
}

/* Ensure content is positioned correctly within the triangle */
.shape-triangle .logo-icon,
.shape-triangle .placeholder-text {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 50%; /* Adjust as needed */
    z-index: 1; /* Ensure content is above triangle borders */
}
.shape-triangle .logo-icon {
    top: 30%; /* Adjust icon position in triangle */
}
.shape-triangle .placeholder-text {
    top: 60%; /* Adjust text position in triangle */
}